apply from: rootDir.canonicalPath + '/.gradle/publish.gradle'

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'java'

group 'com.aye10032'
version '0.1.3'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.0'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

tasks.withType(Javadoc) { //兼容中文
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

javadoc {
//     <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    // 防止本地打开中文乱码
    options.addStringOption("charset", "UTF-8")
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
        mavenJava(MavenPublication) {
            // groupId = project.group
            // artifactId = project.name
            // version = project.version
            // groupId,artifactId,version，如果不定义，则会按照以上默认值执行
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                // 构件名称
                // 区别于artifactId，可以理解为artifactName
                name = 'Bili Info'
                // 构件描述
                description = 'Bilibili Info Util'
                // 构件主页
                url = 'https://github.com/Aye10032/BiliInfo'
                // 许可证名称和地址
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        name = 'Aye10032'
                        email = 'aye10032@gmail.com'
                    }
                }
                // 版本控制仓库地址
                scm {
                    url = 'https://github.com/Aye10032/BiliInfo'
                    connection = 'scm:git:git://github.com/Aye10032/BiliInfo.git'
                    developerConnection = 'scm:git:ssh://git@github.com:Aye10032/BiliInfo.git'
                }
                withXml {
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each() {
                        it.scope*.value = 'compile'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Aye10032/BiliInfo")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GIT_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GIT_TOKEN")
            }
        }
        maven {
            name = "MavenCentral"
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                // 这里就是之前在issues.sonatype.org注册的账号
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}